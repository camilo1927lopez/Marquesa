
<AuthorizeView>
    <Authorized>
        
        <div class="dropdown" style="padding-right: 65px;">
            <button class="btn btn-link dropdown-toggle" @onclick="ToggleDropdown" style="margin-left: 19px;">
                <i class="fa-solid fa-user"></i>
                Hola, @context.User.Identity!.Name
            </button>
            <div class="@GetDropdownClass()">
@*                <a class="dropdown-item" href="#">Opción 1</a>*@
                <a class="dropdown-item no-hover" href="changePassword" style="padding-right: 42px;">
                    <i class="fa-solid fa-key"></i>
                    Cambiar contraseña</a>
                <div class="dropdown-divider"></div>
                <a href="Logout" class="dropdown-item no-hover">
                    <i class="fa-solid fa-arrow-right-from-bracket"></i>
                    Cerrar Sesión</a>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<style>
    .no-hover:hover {
        background-color: transparent;
        color: inherit;
        text-decoration: none;
    }
</style>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = null!;

    protected async override Task OnParametersSetAsync()
    {
        var authenticationState = await authenticationStateTask;
        var claims = authenticationState.User.Claims.ToList();
        
    }
    bool isDropdownOpen = false;

    void ToggleDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
    }

    string GetDropdownClass()
    {
        return isDropdownOpen ? "dropdown-menu show" : "dropdown-menu";
    }
}