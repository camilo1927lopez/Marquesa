<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>