<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wBw=
</value>
  </data>
</root>