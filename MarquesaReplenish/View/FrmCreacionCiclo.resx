<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEAIACwDgAAFgAAACgAAAAeAAAAPAAAAAEAIAAAAAAAEA4AAMMOAADDDgAAAAAAAAAA
        AAAAAAAMAAAAeQAAANsAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA5QAAAKUAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACDAAAA3gAAAIMAAABhAAAAYgAAAGIAAABiAAAAYgAAAGIAAABiAAAAYgAAAGIAAABiAAAAYgAA
        AGIAAABiAAAAYgAAAGIAAABhAAAAbwAAAMoAAACwAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADrAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAADhAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAADUAAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAACvAAAARgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAABAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAFQAAABuAAAAXwAAADoAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAARgAAAEMAAACrAAAArAAAAKsAAACrAAAAqwAAAKsAAACrAAAArAAAAKcAAAA2AAAAAAAA
        AAAAAAAAAAAABQAAADIAAAAMAAAAhAAAAO8AAADSAAAA4AAAANEAAAAZAAAAKwAAABkAAAAAAAAAAAAA
        AAAAAAD4AAAARgAAADcAAACQAAAAjgAAAI8AAACQAAAAkAAAAJAAAACQAAAAkQAAAIwAAAAsAAAAAAAA
        AAAAAAADAAAAdQAAAO0AAACvAAAAzQAAAJUAAAASAAAARgAAAOMAAACdAAAA5AAAALkAAAAfAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAHAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAB1AAAA4gAAAH4AAAC2AAAA3QAAAEoAAAAAAAAAEgAAALMAAADbAAAAewAAAMIAAAC5AAAAIAAA
        AAAAAAD4AAAASAAAAAAAAAAyAAAAzgAAAMQAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADsAAADvAAAAdgAAAAAAAAAQAAAAHgAAAAAAAAAAAAAAAAAAABEAAAAeAAAAAAAAACwAAADjAAAAjwAA
        AAAAAAD4AAAASAAAAAUAAACuAAAAtgAAAL4AAADGAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABIAAAC9AAAApgAAAAoAAAAAAAAAAAAAACsAAABXAAAAQwAAAAsAAAAAAAAAAAAAAFYAAADhAAAASwAA
        AAAAAAD4AAAASAAAAAAAAAAyAAAAEwAAAB0AAAC6AAAAxgAAACkAAAAAAAAAAAAAAAAAAAAAAAAAHgAA
        AHoAAADLAAAA2AAAABgAAAAAAAAAaQAAAN4AAADXAAAA4QAAAKkAAAAYAAAAAAAAAIkAAADwAAAAlQAA
        AFEAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAuAAAAIUAAAAAAAAAAAAAAAAAAAAAAAAAXQAA
        AO8AAACcAAAATgAAAAAAAAAxAAAA4AAAAHUAAAAXAAAAOgAAANQAAACCAAAAAAAAACQAAACBAAAA0gAA
        ANEAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAABkAAAAAAAAAAAAAAAAAAAAAAAAAYQAA
        AM0AAAAMAAAAAAAAAAAAAABkAAAA0QAAABEAAAAAAAAAAAAAAIIAAAC9AAAABwAAAAAAAAAAAAAAfAAA
        ANUAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAA
        ANoAAAA3AAAADAAAAAAAAABSAAAA3gAAACsAAAAAAAAAAwAAAKIAAACsAAAAAwAAAAQAAAAcAAAAmAAA
        ANcAAAD4AAAASAAAAAAAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAUAAAAAAAAARgAA
        ANwAAADhAAAAogAAAAoAAAATAAAAuwAAAMcAAAByAAAAmwAAAOMAAABMAAAAAAAAAFsAAADcAAAA4wAA
        AKkAAAD4AAAARQAAAEoAAAC6AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALYAAAA7AAAAAQAA
        ACIAAACoAAAA1gAAABgAAAAAAAAAIwAAAJQAAADIAAAAtAAAAFAAAAACAAAAAAAAAIcAAADlAAAARgAA
        AA8AAAD4AAAARgAAAC8AAAB+AAAAfQAAAH0AAAB/AAAAfwAAAH8AAAB/AAAAfwAAAHsAAAAmAAAAAAAA
        ADAAAADkAAAAcgAAAAAAAAAAAAAAAAAAAAAAAAAMAAAABQAAAAAAAAAAAAAAAAAAACcAAADeAAAAgQAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAJAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACIAAADIAAAAswAAACEAAABTAAAAegAAABsAAAAAAAAABAAAAFcAAAB4AAAAHgAAAG0AAADmAAAAYQAA
        AAAAAAD4AAAASAAAAAAAAAA8AAAA2AAAAM8AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAArAAAAyAAAANsAAADjAAAA8wAAAHEAAAAAAAAAIgAAAOAAAADpAAAA2AAAAOUAAABqAAAAAgAA
        AAAAAAD4AAAASAAAAAUAAACuAAAAqQAAALIAAADPAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALAAAAJ8AAABSAAAApAAAAMgAAABuAAAAlAAAAOEAAABKAAAAkwAAAGQAAAABAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAnAAAADQAAABYAAACuAAAA0AAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAVgAAAMQAAADDAAAAxgAAAJcAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAqwAAAIMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABEAAABrAAAAMAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAADSAAAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD4AAAASAAAAAAAAAAAAAAAAAAAAAsAAAApAAAAKwAAACsAAAAsAAAALAAAACwAAAAsAAAALAAA
        ACwAAAAsAAAAFgAAAAAAAAAAAAAAAAAAABQAAADSAAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADwAAAAaAAAAAAAAAAAAAAAAAAAAFkAAADmAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAA
        AN0AAADoAAAAmgAAAAAAAAAAAAAAAAAAACkAAADfAAAASgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACaAAAA2QAAAGYAAABEAAAAQgAAAJkAAADTAAAAQgAAADkAAAA6AAAAOgAAADoAAAA6AAAAOgAA
        ADcAAACgAAAAzQAAAEgAAABDAAAAUAAAALcAAADCAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAUAAAAiAAAANUAAADcAAAA2wAAAO4AAADCAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB8AAAA+AAAANwAAADbAAAA2gAAAK4AAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAABgAAAAiAAAAHwAAAIMAAADdAAAAaQAAAGIAAABiAAAAYgAAAGIAAABiAAAAYgAA
        AGAAAAC1AAAAwgAAACcAAAAiAAAAHQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAADoAAAA6wAAAOsAAADrAAAA6wAAAOsAAADrAAAA6wAA
        AOsAAADuAAAAlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAP8AAAB/D//8fw///H8P//x/CAP4HwABwAcAAYADDP8BAQh/E5EAPwwxCB4IEA8eEBAPnjGMD/4
        RAAgCABAAAAgQAAEecQz/AQEIf4EBAD/AAwgf6B8PH/g/D5/8fw4AHH8OABx/AAAAfwA/gP8gAAH/PgA
        f/w=
</value>
  </data>
</root>